org: fabulousplastic
service: message-board-service

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1  # AWS region for your deployment
  
  # httpApi:
  #   cors:
  #     allowOrigins:
  #       - '*'  # Allow all origins, or specify your frontend URL (e.g., 'http://localhost:3000')
  #     allowMethods:
  #       - GET
  #       - POST
  #       - PUT
  #       - OPTIONS
  #     allowHeaders:
  #       - Content-Type
  #       - Authorization
  #       - X-Amz-Date
  #       - X-Api-Key
  #       - X-Amz-Security-Token

  environment:
    MESSAGES_TABLE: shuiMessages  # Pass the table name as an environment variable
  
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "*"  # Scope this down to the actual table ARN in production
      managedPolicies:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole  # Lambda execution policy
functions:
  createMessage:
    handler: handler.handler  # Express handler (single export)
    events:
      - httpApi:
          path: /message
          method: post
  updateMessage:
    handler: handler.handler  # Express handler (single export)
    events:
      - httpApi:
          path: /message/{messageId}
          method: put
  getMessages:
    handler: handler.handler  # Express handler (single export)
    events:
      - httpApi:
          path: /messages
          method: get
  getMessagesByUser:
    handler: handler.handler  # Express handler (single export)
    events:
      - httpApi:
          path: /messages/user/{userId}
          method: get
  # app:
    # handler: handler.handler  # Express handler (single export)
    # events:
    #   - httpApi:
    #       path: /message
    #       method: post
    #   - httpApi:
    #       path: /message/{messageId}
    #       method: put
    #   - httpApi:
    #       path: /messages
    #       method: get
    #   - httpApi:
    #       path: /messages/user/{userId}
    #       method: get

resources:
  Resources:
    ShuiMessagesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: shuiMessages
        AttributeDefinitions:
          - AttributeName: messageId
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: messageId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: userId-index    # GSI for querying by userId
            KeySchema:
              - AttributeName: userId
                KeyType: HASH          # userId as partition key for GSI
            Projection:
              ProjectionType: ALL      # Project all attributes from the table


package:
  exclude:
    - node_modules/aws-sdk/**  # Exclude AWS SDK as it's included in Lambda by default
    - .git/**
    - .vscode/**
    - README.md
    - package-lock.json
    - message-board-frontend/**  # Exclude frontend as it's deployed separately to S3
